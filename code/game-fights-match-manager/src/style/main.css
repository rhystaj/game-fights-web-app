* {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  margin: 0;
  z-index: 0;
}

body {
  font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
}

button {
  height: 2em;
  width: 150px;
}

ul {
  margin: 0;
  padding: 0;
}

/*
    Works out the margin required to be applied to a child element for it to be centred within its parent, given the size
    of the parent and the child.
*/
/*
    Separates children of a particular type with margins bewteen them.
*/
/*
    The way in which major sections are divided.
*/
.header {
  border-bottom: 1px solid black;
  padding: 1rem;
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  display: block;
}

.header img {
  display: inline-block;
  vertical-align: middle;
}

.header ul {
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  list-style: none;
  margin: 1em;
  vertical-align: middle;
  width: 15em;
}

.header .logo {
  height: 100px;
}

.header .notificationsIcon {
  float: right;
  height: 50px;
}

.runNewMatch {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  width: 100%;
  padding-top: 2em;
}

.runNewMatch p {
  text-align: center;
  width: 100%;
}

.matchInvitation {
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: auto auto;
      grid-template-columns: auto auto;
  -ms-grid-rows: 3em 2em;
      grid-template-rows: 3em 2em;
  width: 100%;
}

.matchInvitation p {
  width: 100%;
  text-align: center;
  -ms-grid-column: 1;
  -ms-grid-column-span: 2;
  grid-column: 1 / span 2;
}

.matchInvitation .acceptButton {
  -ms-grid-column: 1;
      grid-column-start: 1;
  -ms-grid-column-align: end;
      justify-self: end;
}

/*
    Works out the margin required to be applied to a child element for it to be centred within its parent, given the size
    of the parent and the child.
*/
/*
    Separates children of a particular type with margins bewteen them.
*/
/*
    The way in which major sections are divided.
*/
.matchInfo {
  border-bottom: 1px solid black;
  padding: 1rem;
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: auto 11em;
      grid-template-columns: auto 11em;
  -ms-grid-rows: auto auto;
      grid-template-rows: auto auto;
}

.matchInfo h1 {
  -ms-grid-column: 1;
  -ms-grid-column-span: 2;
  grid-column: 1 / span 2;
  -ms-grid-row: 1;
  grid-row: 1;
}

.matchInfo .matchDatesDisplay {
  -ms-grid-column: 2;
  grid-column: 2;
  -ms-grid-row: 1;
  -ms-grid-row-span: 2;
  grid-row: 1 / span 2;
  text-align: right;
}

.matchInfo .matchDatesDisplay .dateText:not(:last-of-type) {
  margin-bottom: 1em;
}

.matchInfo .userDisplay {
  -ms-grid-column: 1;
  grid-column: 1;
  -ms-grid-row: 2;
  grid-row: 2;
  margin: 1em 0;
}

.matchInfo .userDisplay div {
  display: inline-block;
}

.matchInfo .userDisplay img:not(:last-of-type) {
  margin-right: 1em;
}

.matchInfo .userDisplay div:not(:last-of-type) {
  margin-right: 2em;
}

.matchInfo.judge .enterableText.matchTitle.editing .textEntry input, .matchInfo.judge .enterableText.matchTitle.editing .textEntry button {
  font-size: 2em;
}

.matchInfo.judge .manageInvitesButton {
  margin-top: 1em;
  height: 2em;
  vertical-align: top;
}

.matchInfo.judge .userDisplay {
  margin-bottom: 0;
}

.matchInfo.judge .userDisplay div {
  display: block;
}

.matchInfo.judge .userDisplay .pendingInvite {
  opacity: 50%;
}

.entry input, .entry button {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  height: 1em;
  padding: 0.1em;
  vertical-align: middle;
}

.entry button {
  width: 1em;
}

.entry.dateEntry .dateEntryArea {
  display: inline-block;
}

.enterableText p, .enterableText h1, .enterableText h2, .enterableText h3, .enterableText h4, .enterableText h5, .enterableText h6 {
  display: inline;
  border-bottom: solid 1px black;
}

.searchModal {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  position: fixed;
  left: 0;
  top: 0;
  width: 100%;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.6);
  z-index: 1;
}

.searchModal .searchModalContent {
  border: solid 5px;
  background-color: whitesmoke;
  margin: 50px 0;
  height: -webkit-fit-content;
  height: -moz-fit-content;
  height: fit-content;
  padding: 1em;
}

.asyncActionComponent .controlsPendingAnimation {
  display: inline-block;
  height: 1em;
  width: 1em;
  position: relative;
  top: 0.19em;
}

.confirmationCancelButtons {
  display: -ms-grid;
  display: grid;
  -ms-grid-rows: auto;
      grid-template-rows: auto;
  -ms-grid-columns: 150px 150px;
      grid-template-columns: 150px 150px;
  place-items: center;
}

.searchModal.fighterInvitation > .searchModalContent {
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: 300px 300px;
      grid-template-columns: 300px 300px;
  -ms-grid-rows: 1.3em 400px 2em;
      grid-template-rows: 1.3em 400px 2em;
  -webkit-column-gap: 1em;
          column-gap: 1em;
}

.searchModal.fighterInvitation > .searchModalContent .modalSearchBox {
  -ms-grid-column: 1;
  grid-column: 1;
  -ms-grid-row: 1;
  grid-row: 1;
  height: 100%;
  width: 100%;
}

.searchModal.fighterInvitation > .searchModalContent .itemList {
  background-color: white;
  overflow-y: auto;
  padding: 1em;
}

.searchModal.fighterInvitation > .searchModalContent .fighterInvitationSearchResults {
  -ms-grid-column: 1;
  grid-column: 1;
  -ms-grid-row: 2;
  grid-row: 2;
}

.searchModal.fighterInvitation > .searchModalContent .invitedFighters {
  -ms-grid-column: 2;
  grid-column: 2;
  -ms-grid-row: 1;
  -ms-grid-row-span: 2;
  grid-row: 1 / span 2;
}

.searchModal.fighterInvitation > .searchModalContent .fighterListItem {
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: 50px auto 5em;
      grid-template-columns: 50px auto 5em;
  -ms-grid-rows: 50px;
      grid-template-rows: 50px;
  -webkit-column-gap: 1em;
          column-gap: 1em;
  margin-bottom: 1em;
}

.searchModal.fighterInvitation > .searchModalContent .fighterListItem * {
  -ms-flex-item-align: center;
      -ms-grid-row-align: center;
      align-self: center;
}

.searchModal.fighterInvitation > .searchModalContent .fighterListItem img {
  height: 50px;
  width: 50px;
}

.searchModal.fighterInvitation > .searchModalContent .fighterListItem button {
  height: 2em;
  width: 100%;
}

.searchModal.fighterInvitation > .searchModalContent .confirmationCancelButtons {
  -ms-grid-column: 2;
  grid-column: 2;
}

.searchModal.fighterInvitation > .searchModalContent .confirmationCancelButtons button {
  height: 100%;
}

/*
    Works out the margin required to be applied to a child element for it to be centred within its parent, given the size
    of the parent and the child.
*/
/*
    Separates children of a particular type with margins bewteen them.
*/
/*
    The way in which major sections are divided.
*/
.questionsComponent {
  border-bottom: 1px solid black;
  padding: 1rem;
}

.questionsComponent .question:not(:last-of-type) {
  margin-bottom: 1em;
}

.questionsComponent h1 {
  margin-bottom: 1em;
}

.questionsComponent.questionsEditor {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
}

.questionsComponent.questionsEditor .addQuestionButton {
  -ms-flex-item-align: center;
      -ms-grid-row-align: center;
      align-self: center;
}

/*
    Works out the margin required to be applied to a child element for it to be centred within its parent, given the size
    of the parent and the child.
*/
/*
    Separates children of a particular type with margins bewteen them.
*/
.questionsComponent.questionsEditor.answerJudgementManager .question:not(:last-of-type) {
  margin-bottom: 2em;
}

.questionsComponent.questionsEditor.answerJudgementManager h1 {
  margin-bottom: 0.4em;
}

.deletableListedQuestion p {
  display: inline-block;
  opacity: 100%;
}

.deletableListedQuestion .deleteQuestionButton {
  width: 2em;
  height: 1.5em;
  margin-left: 1em;
  vertical-align: middle;
  position: relative;
  top: -0.1em;
}

.deletableListedQuestion.pending .questionText {
  opacity: 25%;
}

.deletableListedQuestion.judgeable .answerJudgement:not(:last-of-type) {
  margin-bottom: 1em;
}

.deletableListedQuestion.judgeable .questionText {
  margin-bottom: 0.5em;
}

.deletableListedQuestion.judgeable .answerJudgement {
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: 100px auto 15em;
      grid-template-columns: 100px auto 15em;
  -webkit-column-gap: 1rem;
          column-gap: 1rem;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.deletableListedQuestion.judgeable .answerJudgement .answerJudgementText {
  place-self: center end;
  font-style: italic;
}

.deletableListedQuestion.judgeable .answerJudgement .answerJudgementOptions {
  place-self: center end;
}

.deletableListedQuestion.judgeable .answerJudgement .answerJudgementOptions button:not(:last-of-type) {
  margin-right: 0.5em;
}

.deletableListedQuestion.judgeable .answerJudgement .answerJudgementOptions button {
  width: 7em;
}

.deletableListedQuestion.judgeable.pending .judgementsList {
  opacity: 25%;
}

.answerSubmissionComponent {
  border-bottom: 1px solid black;
  padding: 1rem;
}

.answerSubmissionComponent .submission:not(:last-of-type) {
  margin-bottom: 2em;
}

.answerSubmissionComponent h2 {
  margin-bottom: 1em;
}

.answerSubmissionComponent .forfietButton {
  margin-top: 3em;
}

.answerSubmissionComponent.answerSubmissionManager .statusText {
  font-style: italic;
}

.answerSubmissionComponent.answerSubmissionManager .submission {
  display: -ms-grid;
  display: grid;
  -ms-grid-rows: auto auto auto;
      grid-template-rows: auto auto auto;
  -ms-grid-columns: auto 22em;
      grid-template-columns: auto 22em;
  row-gap: 1rem;
  padding-top: 1em;
}

.answerSubmissionComponent.answerSubmissionManager .submission .answerSubmissionOptions {
  -ms-grid-row: 1;
  -ms-grid-row-span: 3;
  grid-row: 1 / span 3;
  -ms-grid-column: 2;
  grid-column: 2;
  place-self: center stretch;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
}

.answerSubmissionComponent.answerSubmissionManager .submission .answerSubmissionOptions .submissionOption {
  display: inline-block;
  height: 2rem;
  width: 7rem;
}

.answerSubmissionComponent.answerSubmissionManager .forfietButton {
  margin-top: 3em;
}

.matchResultsManager {
  border-bottom: 1px solid black;
  padding: 1rem;
}

.matchResultsManager .matchResult:not(:last-of-type) {
  margin-bottom: 3em;
}

.matchResultsManager h1 {
  margin-bottom: 1em;
}

.matchResultsManager .matchResult h2 {
  margin-bottom: 0.5em;
}

.matchResultsManager .matchResult .matchAnswer {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  padding: 1em;
}

.matchResultsManager .matchResult .matchAnswer img {
  margin-right: 0.5em;
  height: 75px;
  width: 75px;
}

.matchResultsManager .matchResult .matchAnswer.unselectable {
  background-color: lightgray;
}

.matchResultsManager .matchResult .matchAnswer.unselectable p {
  color: grey;
  font-style: italic;
}

.matchResultsManager .matchResult .matchAnswer.unselected:hover {
  background-color: lightcyan;
}

.matchResultsManager .matchResult .matchAnswer.selected {
  background-color: lightblue;
}

.matchProgressingControls {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
}

.matchProgressingControls.questionListProgressingControls .proceedMatchButton {
  width: 15em;
}

.matchProgressingControls.matchResultProgressingControls .proceedMatchButton {
  width: 15em;
}
/*# sourceMappingURL=main.css.map */